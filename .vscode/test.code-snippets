{
	// Place your ezal-markdown-new 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"It": {
		"scope": "typescript",
		"prefix": "it",
		"body": [
			"it('Example $1', async () => {",
			"\tconst md = '$2';",
			"\tconst ast: ASTLikeNode = ['document', $0];",
			"\tconst result = await EzalMarkdown.parse(md);",
			"\texpect(result.document).toLikeAst(ast);",
			"});",
		],
	},
	"Describe": {
		"scope": "typescript",
		"prefix": "describe",
		"body": [
			"/** @see https://spec.commonmark.org/0.31.2/#$1 */",
			"",
			"import { describe, expect, it } from 'vitest';",
			"import { EzalMarkdown } from '../../src';",
			"import { ASTLikeNode, initAstMatcher } from '../ast';",
			"",
			"initAstMatcher();",
			"",
			"describe('CommonMark: $2', () => {$0});",
		]
	},
}